{"ast":null,"code":"import Socket from \"../util/Socket\";\nimport { experimentEPs } from \"../Config.json\";\nconst {\n  startEP,\n  memoryEP,\n  musicUpdateEP,\n  expEndEP\n} = experimentEPs;\n\nasync function start(uid, exp_num, initial_v, initial_a) {\n  const payLoad = {\n    uid: uid,\n    exp_num: exp_num,\n    initial_v: initial_v,\n    initial_a: initial_a\n  }; //console.log(payLoad, startEP);\n\n  return await Socket.POST(startEP, payLoad);\n}\n\nasync function memory(uid, exp_num, music_num, memory) {\n  const payLoad = {\n    uid: uid,\n    exp_num: exp_num,\n    music_num: music_num,\n    memory: memory\n  }; //console.log(payLoad);\n\n  return await Socket.POST(memoryEP, payLoad);\n}\n\nasync function musicUpdate(uid, exp_num, music_num, mid, v, a, score, familiarity) {\n  const payLoad = {\n    uid: uid,\n    exp_num: exp_num,\n    music_num: music_num,\n    mid: mid,\n    v: v,\n    a: a,\n    score: score,\n    familiarity: familiarity\n  }; //console.log(payLoad);\n\n  return await Socket.POST(musicUpdateEP, payLoad);\n}\n\nasync function expEnd(uid, exp_num, v, a, evaluate, recommend_rate) {\n  const payLoad = {\n    uid: uid,\n    exp_num: exp_num,\n    final_v: v,\n    final_a: a,\n    evaluate: evaluate,\n    recommend_rate: recommend_rate\n  }; //console.log(payLoad);\n\n  return await Socket.POST(expEndEP, payLoad);\n}\n\nexport default {\n  start,\n  memory,\n  musicUpdate,\n  expEnd\n};","map":{"version":3,"sources":["C:/Users/31505/Desktop/MemomusicFront1111-main/src/services/Experiment.js"],"names":["Socket","experimentEPs","startEP","memoryEP","musicUpdateEP","expEndEP","start","uid","exp_num","initial_v","initial_a","payLoad","POST","memory","music_num","musicUpdate","mid","v","a","score","familiarity","expEnd","evaluate","recommend_rate","final_v","final_a"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,gBAAnB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AAEA,MAAM;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA,aAArB;AAAoCC,EAAAA;AAApC,IAAiDJ,aAAvD;;AAEA,eAAeK,KAAf,CAAqBC,GAArB,EAA0BC,OAA1B,EAAmCC,SAAnC,EAA8CC,SAA9C,EAAyD;AACvD,QAAMC,OAAO,GAAG;AACdJ,IAAAA,GAAG,EAAEA,GADS;AAEdC,IAAAA,OAAO,EAAEA,OAFK;AAGdC,IAAAA,SAAS,EAAEA,SAHG;AAIdC,IAAAA,SAAS,EAAEA;AAJG,GAAhB,CADuD,CAOvD;;AACA,SAAO,MAAMV,MAAM,CAACY,IAAP,CAAYV,OAAZ,EAAqBS,OAArB,CAAb;AACD;;AAED,eAAeE,MAAf,CAAsBN,GAAtB,EAA2BC,OAA3B,EAAoCM,SAApC,EAA+CD,MAA/C,EAAuD;AACrD,QAAMF,OAAO,GAAG;AACdJ,IAAAA,GAAG,EAAEA,GADS;AAEdC,IAAAA,OAAO,EAAEA,OAFK;AAGdM,IAAAA,SAAS,EAAEA,SAHG;AAIdD,IAAAA,MAAM,EAAEA;AAJM,GAAhB,CADqD,CAOrD;;AACA,SAAO,MAAMb,MAAM,CAACY,IAAP,CAAYT,QAAZ,EAAsBQ,OAAtB,CAAb;AACD;;AAED,eAAeI,WAAf,CAA2BR,GAA3B,EAAgCC,OAAhC,EAAyCM,SAAzC,EAAoDE,GAApD,EAAyDC,CAAzD,EAA4DC,CAA5D,EAA+DC,KAA/D,EAAsEC,WAAtE,EAAmF;AACjF,QAAMT,OAAO,GAAG;AACdJ,IAAAA,GAAG,EAAEA,GADS;AAEdC,IAAAA,OAAO,EAAEA,OAFK;AAGdM,IAAAA,SAAS,EAAEA,SAHG;AAIdE,IAAAA,GAAG,EAAEA,GAJS;AAKdC,IAAAA,CAAC,EAAEA,CALW;AAMdC,IAAAA,CAAC,EAAEA,CANW;AAOdC,IAAAA,KAAK,EAAEA,KAPO;AAQdC,IAAAA,WAAW,EAAEA;AARC,GAAhB,CADiF,CAWjF;;AACA,SAAO,MAAMpB,MAAM,CAACY,IAAP,CAAYR,aAAZ,EAA2BO,OAA3B,CAAb;AACD;;AAED,eAAeU,MAAf,CAAsBd,GAAtB,EAA2BC,OAA3B,EAAoCS,CAApC,EAAuCC,CAAvC,EAA0CI,QAA1C,EAAoDC,cAApD,EAAoE;AAClE,QAAMZ,OAAO,GAAG;AACdJ,IAAAA,GAAG,EAAEA,GADS;AAEdC,IAAAA,OAAO,EAAEA,OAFK;AAGdgB,IAAAA,OAAO,EAAEP,CAHK;AAIdQ,IAAAA,OAAO,EAAEP,CAJK;AAKdI,IAAAA,QAAQ,EAAEA,QALI;AAMdC,IAAAA,cAAc,EAAEA;AANF,GAAhB,CADkE,CASlE;;AACA,SAAO,MAAMvB,MAAM,CAACY,IAAP,CAAYP,QAAZ,EAAsBM,OAAtB,CAAb;AACD;;AAED,eAAe;AACbL,EAAAA,KADa;AACNO,EAAAA,MADM;AACEE,EAAAA,WADF;AACeM,EAAAA;AADf,CAAf","sourcesContent":["import Socket from \"../util/Socket\";\nimport { experimentEPs } from \"../Config.json\";\n\nconst { startEP, memoryEP, musicUpdateEP, expEndEP } = experimentEPs;\n\nasync function start(uid, exp_num, initial_v, initial_a) {\n  const payLoad = {\n    uid: uid,\n    exp_num: exp_num,\n    initial_v: initial_v,\n    initial_a: initial_a\n  };\n  //console.log(payLoad, startEP);\n  return await Socket.POST(startEP, payLoad);\n}\n\nasync function memory(uid, exp_num, music_num, memory) {\n  const payLoad = {\n    uid: uid,\n    exp_num: exp_num,\n    music_num: music_num,\n    memory: memory\n  };\n  //console.log(payLoad);\n  return await Socket.POST(memoryEP, payLoad);\n}\n\nasync function musicUpdate(uid, exp_num, music_num, mid, v, a, score, familiarity) {\n  const payLoad = {\n    uid: uid,\n    exp_num: exp_num,\n    music_num: music_num,\n    mid: mid,\n    v: v,\n    a: a,\n    score: score,\n    familiarity: familiarity\n  };\n  //console.log(payLoad);\n  return await Socket.POST(musicUpdateEP, payLoad);\n}\n\nasync function expEnd(uid, exp_num, v, a, evaluate, recommend_rate) {\n  const payLoad = {\n    uid: uid,\n    exp_num: exp_num,\n    final_v: v,\n    final_a: a,\n    evaluate: evaluate,\n    recommend_rate: recommend_rate\n  };\n  //console.log(payLoad);\n  return await Socket.POST(expEndEP, payLoad);\n}\n\nexport default {\n  start, memory, musicUpdate, expEnd\n};\n"]},"metadata":{},"sourceType":"module"}